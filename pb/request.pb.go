// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: request.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// transaction type definition
type TxType int32

const (
	// call a pre created user contract, included in block
	TxType_INVOKE_USER_CONTRACT TxType = 0
	// query a pre created user contract, not included in block
	TxType_QUERY_USER_CONTRACT TxType = 1
	// create a user contract, included in block
	TxType_CREATE_USER_CONTRACT TxType = 2
	// upgrade a pre created user contract, included in block
	TxType_UPGRADE_USER_CONTRACT TxType = 3
	// query a system contract, e.g., block, tx, not included in block
	TxType_QUERY_SYSTEM_CONTRACT TxType = 4
	// update chain config, included in block
	TxType_UPDATE_CHAIN_CONFIG TxType = 5
	// subscribe block info
	TxType_SUBSCRIBE_BLOCK_INFO TxType = 6
	// subscribe tx info
	TxType_SUBSCRIBE_TX_INFO TxType = 7
	// system contract for multi signature
	TxType_SYSTEM_CONTRACT TxType = 8
	// freeze a exist user contract, included in block
	TxType_FREEZE_USER_CONTRACT TxType = 9
	// unfreeze a user contract, included in block
	TxType_UNFREEZE_USER_CONTRACT TxType = 10
	// revoke a user contract, included in block
	TxType_REVOKE_USER_CONTRACT TxType = 11
)

// Enum value maps for TxType.
var (
	TxType_name = map[int32]string{
		0:  "INVOKE_USER_CONTRACT",
		1:  "QUERY_USER_CONTRACT",
		2:  "CREATE_USER_CONTRACT",
		3:  "UPGRADE_USER_CONTRACT",
		4:  "QUERY_SYSTEM_CONTRACT",
		5:  "UPDATE_CHAIN_CONFIG",
		6:  "SUBSCRIBE_BLOCK_INFO",
		7:  "SUBSCRIBE_TX_INFO",
		8:  "SYSTEM_CONTRACT",
		9:  "FREEZE_USER_CONTRACT",
		10: "UNFREEZE_USER_CONTRACT",
		11: "REVOKE_USER_CONTRACT",
	}
	TxType_value = map[string]int32{
		"INVOKE_USER_CONTRACT":   0,
		"QUERY_USER_CONTRACT":    1,
		"CREATE_USER_CONTRACT":   2,
		"UPGRADE_USER_CONTRACT":  3,
		"QUERY_SYSTEM_CONTRACT":  4,
		"UPDATE_CHAIN_CONFIG":    5,
		"SUBSCRIBE_BLOCK_INFO":   6,
		"SUBSCRIBE_TX_INFO":      7,
		"SYSTEM_CONTRACT":        8,
		"FREEZE_USER_CONTRACT":   9,
		"UNFREEZE_USER_CONTRACT": 10,
		"REVOKE_USER_CONTRACT":   11,
	}
)

func (x TxType) Enum() *TxType {
	p := new(TxType)
	*p = x
	return p
}

func (x TxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxType) Descriptor() protoreflect.EnumDescriptor {
	return file_request_proto_enumTypes[0].Descriptor()
}

func (TxType) Type() protoreflect.EnumType {
	return &file_request_proto_enumTypes[0]
}

func (x TxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxType.Descriptor instead.
func (TxType) EnumDescriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0}
}

// transaction request proposed by user
type TxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// header of the request
	Header *TxHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// payload of the request, can be unmarshalled according to tx_type in header
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	// signature of [header bytes || payload bytes]
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *TxRequest) Reset() {
	*x = TxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRequest) ProtoMessage() {}

func (x *TxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRequest.ProtoReflect.Descriptor instead.
func (*TxRequest) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{0}
}

func (x *TxRequest) GetHeader() *TxHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *TxRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TxRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// header of the request
type TxHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// blockchain identifier
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// sender identifier
	Sender *SerializedMember `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	// transaction type
	TxType TxType `protobuf:"varint,3,opt,name=tx_type,json=txType,proto3,enum=pb.TxType" json:"tx_type,omitempty"`
	// transaction id set by sender, should be unique
	TxId string `protobuf:"bytes,4,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// transaction timestamp, in unix timestamp format, seconds
	Timestamp int64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// expiration timestamp in unix timestamp format
	// after that the transaction is invalid if it is not included in block yet
	ExpirationTime int64 `protobuf:"varint,6,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
}

func (x *TxHeader) Reset() {
	*x = TxHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxHeader) ProtoMessage() {}

func (x *TxHeader) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxHeader.ProtoReflect.Descriptor instead.
func (*TxHeader) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{1}
}

func (x *TxHeader) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *TxHeader) GetSender() *SerializedMember {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *TxHeader) GetTxType() TxType {
	if x != nil {
		return x.TxType
	}
	return TxType_INVOKE_USER_CONTRACT
}

func (x *TxHeader) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TxHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TxHeader) GetExpirationTime() int64 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

// query type transaction payload
// TxType: QUERY_USER_CONTRACT & QUERY_SYSTEM_CONTRACT
type QueryPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// smart contract name
	ContractName string `protobuf:"bytes,1,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
	// query method
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	// query parameters in k-v format
	Parameters []*KeyValuePair `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *QueryPayload) Reset() {
	*x = QueryPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPayload) ProtoMessage() {}

func (x *QueryPayload) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPayload.ProtoReflect.Descriptor instead.
func (*QueryPayload) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{2}
}

func (x *QueryPayload) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *QueryPayload) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *QueryPayload) GetParameters() []*KeyValuePair {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// transact type transaction payload
// TxType: INVOKE_USER_CONTRACT
type TransactPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// smart contract name
	ContractName string `protobuf:"bytes,1,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
	// invoke method
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	// invoke parameters in k-v format
	Parameters []*KeyValuePair `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *TransactPayload) Reset() {
	*x = TransactPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactPayload) ProtoMessage() {}

func (x *TransactPayload) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactPayload.ProtoReflect.Descriptor instead.
func (*TransactPayload) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{3}
}

func (x *TransactPayload) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *TransactPayload) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *TransactPayload) GetParameters() []*KeyValuePair {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// config update type transaction payload
// TxType: UPDATE_CHAIN_CONFIG
type SystemContractPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// endorsment signature with chain_id, redundant with TxHeader
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// smart contract name
	ContractName string `protobuf:"bytes,2,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
	// update method
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	// update parameters in k-v format
	Parameters []*KeyValuePair `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// config sequence, starts from 0 (genesis config)
	Sequence uint64 `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// multi-sign, signature of [SystemContractPayload] with endorsement = nil
	Endorsement []*EndorsementEntry `protobuf:"bytes,6,rep,name=endorsement,proto3" json:"endorsement,omitempty"`
}

func (x *SystemContractPayload) Reset() {
	*x = SystemContractPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemContractPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemContractPayload) ProtoMessage() {}

func (x *SystemContractPayload) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemContractPayload.ProtoReflect.Descriptor instead.
func (*SystemContractPayload) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{4}
}

func (x *SystemContractPayload) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *SystemContractPayload) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *SystemContractPayload) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SystemContractPayload) GetParameters() []*KeyValuePair {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *SystemContractPayload) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *SystemContractPayload) GetEndorsement() []*EndorsementEntry {
	if x != nil {
		return x.Endorsement
	}
	return nil
}

// contract management type transaction payload
// TxType: CREATE_USER_CONTRACT & UPGRADE_USER_CONTRACT & FREEZE_USER_CONTRACT
type ContractMgmtPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// endorsment signature with chain_id, redundant with TxHeader
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// smart contract name, set by contract creator, can have multiple versions
	ContractId *ContractId `protobuf:"bytes,2,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	// invoke method in bytes format
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	// invoke parameters in bytes format
	Parameters []*KeyValuePair `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty"` // 合约参数
	// 合约编译后的字节码
	ByteCode []byte `protobuf:"bytes,5,opt,name=byte_code,json=byteCode,proto3" json:"byte_code,omitempty"`
	// payload signature, config_update|contract_mgmt type needed, multi-sign
	Endorsement []*EndorsementEntry `protobuf:"bytes,6,rep,name=endorsement,proto3" json:"endorsement,omitempty"`
}

func (x *ContractMgmtPayload) Reset() {
	*x = ContractMgmtPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractMgmtPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractMgmtPayload) ProtoMessage() {}

func (x *ContractMgmtPayload) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractMgmtPayload.ProtoReflect.Descriptor instead.
func (*ContractMgmtPayload) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{5}
}

func (x *ContractMgmtPayload) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *ContractMgmtPayload) GetContractId() *ContractId {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *ContractMgmtPayload) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ContractMgmtPayload) GetParameters() []*KeyValuePair {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ContractMgmtPayload) GetByteCode() []byte {
	if x != nil {
		return x.ByteCode
	}
	return nil
}

func (x *ContractMgmtPayload) GetEndorsement() []*EndorsementEntry {
	if x != nil {
		return x.Endorsement
	}
	return nil
}

type EndorsementEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer    *SerializedMember `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Signature []byte            `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *EndorsementEntry) Reset() {
	*x = EndorsementEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndorsementEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndorsementEntry) ProtoMessage() {}

func (x *EndorsementEntry) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndorsementEntry.ProtoReflect.Descriptor instead.
func (*EndorsementEntry) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{6}
}

func (x *EndorsementEntry) GetSigner() *SerializedMember {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *EndorsementEntry) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type KeyValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{7}
}

func (x *KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValuePair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SubscribeBlockPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartBlock int64 `protobuf:"varint,1,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"` // 开始区块高度，<-1：非法；-1：最新区块；>=0：指定区块起始高度
	EndBlock   int64 `protobuf:"varint,2,opt,name=end_block,json=endBlock,proto3" json:"end_block,omitempty"`       // 结束区块高度，<-1：非法；-1：最新区块；>=0：指定区块结束高度
	WithRwSet  bool  `protobuf:"varint,3,opt,name=with_rw_set,json=withRwSet,proto3" json:"with_rw_set,omitempty"`  // 是否获取读写级
}

func (x *SubscribeBlockPayload) Reset() {
	*x = SubscribeBlockPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeBlockPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeBlockPayload) ProtoMessage() {}

func (x *SubscribeBlockPayload) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeBlockPayload.ProtoReflect.Descriptor instead.
func (*SubscribeBlockPayload) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeBlockPayload) GetStartBlock() int64 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *SubscribeBlockPayload) GetEndBlock() int64 {
	if x != nil {
		return x.EndBlock
	}
	return 0
}

func (x *SubscribeBlockPayload) GetWithRwSet() bool {
	if x != nil {
		return x.WithRwSet
	}
	return false
}

// vote propose transaction payload
// TxType: VOTE_CONTRACT
type VotePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// endorsment signature with chain_id, redundant with TxHeader
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// txId voted on
	TxId string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (x *VotePayload) Reset() {
	*x = VotePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VotePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotePayload) ProtoMessage() {}

func (x *VotePayload) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotePayload.ProtoReflect.Descriptor instead.
func (*VotePayload) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{9}
}

func (x *VotePayload) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *VotePayload) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type SubscribeTxPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartBlock int64    `protobuf:"varint,1,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`    // 开始区块高度，<-1：非法；-1：最新区块；>=0：指定区块起始高度
	EndBlock   int64    `protobuf:"varint,2,opt,name=end_block,json=endBlock,proto3" json:"end_block,omitempty"`          // 结束区块高度，<-1：非法；-1：最新区块；>=0：指定区块结束高度
	TxType     TxType   `protobuf:"varint,3,opt,name=tx_type,json=txType,proto3,enum=pb.TxType" json:"tx_type,omitempty"` // 指定订阅交易类型，不填写将订阅所有交易类型消息
	TxIds      []string `protobuf:"bytes,4,rep,name=tx_ids,json=txIds,proto3" json:"tx_ids,omitempty"`                    // 订阅交易ID列表，不填写将订阅所有交易
}

func (x *SubscribeTxPayload) Reset() {
	*x = SubscribeTxPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeTxPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTxPayload) ProtoMessage() {}

func (x *SubscribeTxPayload) ProtoReflect() protoreflect.Message {
	mi := &file_request_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTxPayload.ProtoReflect.Descriptor instead.
func (*SubscribeTxPayload) Descriptor() ([]byte, []int) {
	return file_request_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribeTxPayload) GetStartBlock() int64 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *SubscribeTxPayload) GetEndBlock() int64 {
	if x != nil {
		return x.EndBlock
	}
	return 0
}

func (x *SubscribeTxPayload) GetTxType() TxType {
	if x != nil {
		return x.TxType
	}
	return TxType_INVOKE_USER_CONTRACT
}

func (x *SubscribeTxPayload) GetTxIds() []string {
	if x != nil {
		return x.TxIds
	}
	return nil
}

var File_request_proto protoreflect.FileDescriptor

var file_request_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x69, 0x64, 0x6d, 0x67, 0x6d, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a, 0x09, 0x54, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x08, 0x54, 0x78, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x07, 0x74, 0x78, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13,
	0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x78, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x0c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xf5, 0x01, 0x0a,
	0x15, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x30,
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x0b,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x80, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x4d, 0x67, 0x6d, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x36, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x10, 0x45, 0x6e, 0x64, 0x6f, 0x72,
	0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x36, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x75, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72,
	0x77, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x69, 0x74,
	0x68, 0x52, 0x77, 0x53, 0x65, 0x74, 0x22, 0x3d, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x78, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x78, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x07, 0x74, 0x78,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x78, 0x49, 0x64, 0x73, 0x2a, 0xba, 0x02, 0x0a, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56, 0x4f, 0x4b, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x51,
	0x55, 0x45, 0x52, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41,
	0x43, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x02, 0x12, 0x19,
	0x0a, 0x15, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x55, 0x45,
	0x52, 0x59, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41,
	0x43, 0x54, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x43,
	0x48, 0x41, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x05, 0x12, 0x18, 0x0a,
	0x14, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x55, 0x42, 0x53, 0x43,
	0x52, 0x49, 0x42, 0x45, 0x5f, 0x54, 0x58, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x07, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43,
	0x54, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x09, 0x12, 0x1a, 0x0a,
	0x16, 0x55, 0x4e, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x56,
	0x4f, 0x4b, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43,
	0x54, 0x10, 0x0b, 0x42, 0x3b, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a,
	0x1f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_request_proto_rawDescOnce sync.Once
	file_request_proto_rawDescData = file_request_proto_rawDesc
)

func file_request_proto_rawDescGZIP() []byte {
	file_request_proto_rawDescOnce.Do(func() {
		file_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_request_proto_rawDescData)
	})
	return file_request_proto_rawDescData
}

var file_request_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_request_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_request_proto_goTypes = []interface{}{
	(TxType)(0),                   // 0: pb.TxType
	(*TxRequest)(nil),             // 1: pb.TxRequest
	(*TxHeader)(nil),              // 2: pb.TxHeader
	(*QueryPayload)(nil),          // 3: pb.QueryPayload
	(*TransactPayload)(nil),       // 4: pb.TransactPayload
	(*SystemContractPayload)(nil), // 5: pb.SystemContractPayload
	(*ContractMgmtPayload)(nil),   // 6: pb.ContractMgmtPayload
	(*EndorsementEntry)(nil),      // 7: pb.EndorsementEntry
	(*KeyValuePair)(nil),          // 8: pb.KeyValuePair
	(*SubscribeBlockPayload)(nil), // 9: pb.SubscribeBlockPayload
	(*VotePayload)(nil),           // 10: pb.VotePayload
	(*SubscribeTxPayload)(nil),    // 11: pb.SubscribeTxPayload
	(*SerializedMember)(nil),      // 12: pb.SerializedMember
	(*ContractId)(nil),            // 13: pb.ContractId
}
var file_request_proto_depIdxs = []int32{
	2,  // 0: pb.TxRequest.header:type_name -> pb.TxHeader
	12, // 1: pb.TxHeader.sender:type_name -> pb.SerializedMember
	0,  // 2: pb.TxHeader.tx_type:type_name -> pb.TxType
	8,  // 3: pb.QueryPayload.parameters:type_name -> pb.KeyValuePair
	8,  // 4: pb.TransactPayload.parameters:type_name -> pb.KeyValuePair
	8,  // 5: pb.SystemContractPayload.parameters:type_name -> pb.KeyValuePair
	7,  // 6: pb.SystemContractPayload.endorsement:type_name -> pb.EndorsementEntry
	13, // 7: pb.ContractMgmtPayload.contract_id:type_name -> pb.ContractId
	8,  // 8: pb.ContractMgmtPayload.parameters:type_name -> pb.KeyValuePair
	7,  // 9: pb.ContractMgmtPayload.endorsement:type_name -> pb.EndorsementEntry
	12, // 10: pb.EndorsementEntry.signer:type_name -> pb.SerializedMember
	0,  // 11: pb.SubscribeTxPayload.tx_type:type_name -> pb.TxType
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_request_proto_init() }
func file_request_proto_init() {
	if File_request_proto != nil {
		return
	}
	file_contract_proto_init()
	file_idmgmt_member_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemContractPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractMgmtPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndorsementEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeBlockPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VotePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeTxPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_request_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_request_proto_goTypes,
		DependencyIndexes: file_request_proto_depIdxs,
		EnumInfos:         file_request_proto_enumTypes,
		MessageInfos:      file_request_proto_msgTypes,
	}.Build()
	File_request_proto = out.File
	file_request_proto_rawDesc = nil
	file_request_proto_goTypes = nil
	file_request_proto_depIdxs = nil
}
